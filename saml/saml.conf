#Configure lua-resty-session
set $session_cipher none;
set $session_storage redis;
set $session_redis_prefix        sessions;
set $session_redis_socket        unix:/tmp/redis.sock;
set $session_redis_host          127.0.0.1;
set $session_redis_port          6379;
set $session_redis_uselocking    on;
set $session_redis_spinlockwait  10000;
set $session_redis_maxlockwait   30;
set $session_redis_pool_timeout  45;
set $session_redis_pool_size     10;

#POST by IdP with AuthResponse
location /saml/acs {
  access_by_lua 'require("saml").acs()';
}

#destroy session
location /saml/logout {
  access_by_lua 'require("saml").logout()';
}

#check access on all locations
access_by_lua 'require("saml").checkAccess()';

#dump session
location /saml/session {
    default_type 'text/plain';
    access_by_lua 'return';

    content_by_lua '
      local inspect = require("inspect")
      ngx.say("*** HEADERS ***")
      ngx.say(ngx.req.raw_header())

      ngx.say("*** SESSION DATA ***")
      local session = require "resty.session".open()
      
      if session.data then
        for key, val in pairs(session.data) do
          ngx.say(key, ": ", val )
        end
      end
      
      ngx.say("*** SESSION DUMP ***")
      ngx.say(inspect(session))

    ';
}
